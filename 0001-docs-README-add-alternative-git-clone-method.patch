From de30ee955c55ddf27b8fd15789ad18206bbbc285 Mon Sep 17 00:00:00 2001
From: Pete Bacon Darwin <pete@bacondarwin.com>
Date: Wed, 29 Oct 2014 12:20:42 +0000
Subject: [PATCH] docs(README): add alternative git clone method

Closes #239
---
 .bowerrc                                          |   3 +
 .gitignore                                        |   7 +
 .jshintrc                                         |  13 +
 .travis.yml                                       |  14 +
 LICENSE                                           |  22 ++
 README.md                                         | 297 ++++++++++++++++++++++
 app/app.css                                       |  30 +++
 app/app.js                                        |  12 +
 app/components/version/interpolate-filter.js      |   9 +
 app/components/version/interpolate-filter_test.js |  15 ++
 app/components/version/version-directive.js       |   9 +
 app/components/version/version-directive_test.js  |  17 ++
 app/components/version/version.js                 |   8 +
 app/components/version/version_test.js            |  11 +
 app/index-async.html                              |  58 +++++
 app/index.html                                    |  43 ++++
 app/view1/view1.html                              |   1 +
 app/view1/view1.js                                |  14 +
 app/view1/view1_test.js                           |  16 ++
 app/view2/view2.html                              |   5 +
 app/view2/view2.js                                |  14 +
 app/view2/view2_test.js                           |  16 ++
 bower.json                                        |  15 ++
 e2e-tests/protractor.conf.js                      |  19 ++
 e2e-tests/scenarios.js                            |  42 +++
 karma.conf.js                                     |  33 +++
 package.json                                      |  34 +++
 27 files changed, 777 insertions(+)
 create mode 100644 .bowerrc
 create mode 100644 .gitignore
 create mode 100644 .jshintrc
 create mode 100644 .travis.yml
 create mode 100644 LICENSE
 create mode 100644 README.md
 create mode 100644 app/app.css
 create mode 100644 app/app.js
 create mode 100644 app/components/version/interpolate-filter.js
 create mode 100644 app/components/version/interpolate-filter_test.js
 create mode 100644 app/components/version/version-directive.js
 create mode 100644 app/components/version/version-directive_test.js
 create mode 100644 app/components/version/version.js
 create mode 100644 app/components/version/version_test.js
 create mode 100644 app/index-async.html
 create mode 100644 app/index.html
 create mode 100644 app/view1/view1.html
 create mode 100644 app/view1/view1.js
 create mode 100644 app/view1/view1_test.js
 create mode 100644 app/view2/view2.html
 create mode 100644 app/view2/view2.js
 create mode 100644 app/view2/view2_test.js
 create mode 100644 bower.json
 create mode 100644 e2e-tests/protractor.conf.js
 create mode 100644 e2e-tests/scenarios.js
 create mode 100644 karma.conf.js
 create mode 100644 package.json

diff --git a/.bowerrc b/.bowerrc
new file mode 100644
index 0000000..8c58c8e
--- /dev/null
+++ b/.bowerrc
@@ -0,0 +1,3 @@
+{
+  "directory": "app/bower_components"
+}
\ No newline at end of file
diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..b702acc
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,7 @@
+logs/*
+!.gitkeep
+node_modules/
+bower_components/
+tmp
+.DS_Store
+.idea
\ No newline at end of file
diff --git a/.jshintrc b/.jshintrc
new file mode 100644
index 0000000..6f00218
--- /dev/null
+++ b/.jshintrc
@@ -0,0 +1,13 @@
+{
+  "globalstrict": true,
+  "globals": {
+    "angular": false,
+    "describe": false,
+    "it": false,
+    "expect": false,
+    "beforeEach": false,
+    "afterEach": false,
+    "module": false,
+    "inject": false
+  }
+}
\ No newline at end of file
diff --git a/.travis.yml b/.travis.yml
new file mode 100644
index 0000000..cce5c68
--- /dev/null
+++ b/.travis.yml
@@ -0,0 +1,14 @@
+language: node_js
+node_js:
+  - "0.10"
+
+before_script:
+  - export DISPLAY=:99.0
+  - sh -e /etc/init.d/xvfb start
+  - npm start > /dev/null &
+  - npm run update-webdriver
+  - sleep 1 # give server time to start
+
+script:
+  - node_modules/.bin/karma start karma.conf.js --no-auto-watch --single-run --reporters=dots --browsers=Firefox
+  - node_modules/.bin/protractor e2e-tests/protractor.conf.js --browser=firefox
diff --git a/LICENSE b/LICENSE
new file mode 100644
index 0000000..9ced331
--- /dev/null
+++ b/LICENSE
@@ -0,0 +1,22 @@
+The MIT License
+
+Copyright (c) 2010-2014 Google, Inc. http://angularjs.org
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in
+all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+THE SOFTWARE.
+
diff --git a/README.md b/README.md
new file mode 100644
index 0000000..e7aece1
--- /dev/null
+++ b/README.md
@@ -0,0 +1,297 @@
+# angular-seed â€” the seed for AngularJS apps
+
+This project is an application skeleton for a typical [AngularJS](http://angularjs.org/) web app.
+You can use it to quickly bootstrap your angular webapp projects and dev environment for these
+projects.
+
+The seed contains a sample AngularJS application and is preconfigured to install the Angular
+framework and a bunch of development and testing tools for instant web development gratification.
+
+The seed app doesn't do much, just shows how to wire two controllers and views together.
+
+
+## Getting Started
+
+To get you started you can simply clone the angular-seed repository and install the dependencies:
+
+### Prerequisites
+
+You need git to clone the angular-seed repository. You can get git from
+[http://git-scm.com/](http://git-scm.com/).
+
+We also use a number of node.js tools to initialize and test angular-seed. You must have node.js and
+its package manager (npm) installed.  You can get them from [http://nodejs.org/](http://nodejs.org/).
+
+### Clone angular-seed
+
+Clone the angular-seed repository using [git][git]:
+
+```
+git clone https://github.com/angular/angular-seed.git
+cd angular-seed
+```
+
+If you just want to start a new project without the angular-seed commit history then you can do:
+
+```bash
+git clone --depth=1 https://github.com/angular/angular-seed.git <your-project-name>
+```
+
+The `depth=1` tells git to only pull down one commit worth of historical data.
+
+### Install Dependencies
+
+We have two kinds of dependencies in this project: tools and angular framework code.  The tools help
+us manage and test the application.
+
+* We get the tools we depend upon via `npm`, the [node package manager][npm].
+* We get the angular code via `bower`, a [client-side code package manager][bower].
+
+We have preconfigured `npm` to automatically run `bower` so we can simply do:
+
+```
+npm install
+```
+
+Behind the scenes this will also call `bower install`.  You should find that you have two new
+folders in your project.
+
+* `node_modules` - contains the npm packages for the tools we need
+* `app/bower_components` - contains the angular framework files
+
+*Note that the `bower_components` folder would normally be installed in the root folder but
+angular-seed changes this location through the `.bowerrc` file.  Putting it in the app folder makes
+it easier to serve the files by a webserver.*
+
+### Run the Application
+
+We have preconfigured the project with a simple development web server.  The simplest way to start
+this server is:
+
+```
+npm start
+```
+
+Now browse to the app at `http://localhost:8000/app/index.html`.
+
+
+
+## Directory Layout
+
+```
+app/                    --> all of the source files for the application
+  app.css               --> default stylesheet
+  components/           --> all app specific modules
+    version/              --> version related components
+      version.js                 --> version module declaration and basic "version" value service
+      version_test.js            --> "version" value service tests
+      version-directive.js       --> custom directive that returns the current app version
+      version-directive_test.js  --> version directive tests
+      interpolate-filter.js      --> custom interpolation filter
+      interpolate-filter_test.js --> interpolate filter tests
+  view1/                --> the view1 view template and logic
+    view1.html            --> the partial template
+    view1.js              --> the controller logic
+    view1_test.js         --> tests of the controller
+  view2/                --> the view2 view template and logic
+    view2.html            --> the partial template
+    view2.js              --> the controller logic
+    view2_test.js         --> tests of the controller
+  app.js                --> main application module
+  index.html            --> app layout file (the main html template file of the app)
+  index-async.html      --> just like index.html, but loads js files asynchronously
+karma.conf.js         --> config file for running unit tests with Karma
+e2e-tests/            --> end-to-end tests
+  protractor-conf.js    --> Protractor config file
+  scenarios.js          --> end-to-end scenarios to be run by Protractor
+```
+
+## Testing
+
+There are two kinds of tests in the angular-seed application: Unit tests and End to End tests.
+
+### Running Unit Tests
+
+The angular-seed app comes preconfigured with unit tests. These are written in
+[Jasmine][jasmine], which we run with the [Karma Test Runner][karma]. We provide a Karma
+configuration file to run them.
+
+* the configuration is found at `karma.conf.js`
+* the unit tests are found next to the code they are testing and are named as `..._test.js`.
+
+The easiest way to run the unit tests is to use the supplied npm script:
+
+```
+npm test
+```
+
+This script will start the Karma test runner to execute the unit tests. Moreover, Karma will sit and
+watch the source and test files for changes and then re-run the tests whenever any of them change.
+This is the recommended strategy; if your unit tests are being run every time you save a file then
+you receive instant feedback on any changes that break the expected code functionality.
+
+You can also ask Karma to do a single run of the tests and then exit.  This is useful if you want to
+check that a particular version of the code is operating as expected.  The project contains a
+predefined script to do this:
+
+```
+npm run test-single-run
+```
+
+
+### End to end testing
+
+The angular-seed app comes with end-to-end tests, again written in [Jasmine][jasmine]. These tests
+are run with the [Protractor][protractor] End-to-End test runner.  It uses native events and has
+special features for Angular applications.
+
+* the configuration is found at `e2e-tests/protractor-conf.js`
+* the end-to-end tests are found in `e2e-tests/scenarios.js`
+
+Protractor simulates interaction with our web app and verifies that the application responds
+correctly. Therefore, our web server needs to be serving up the application, so that Protractor
+can interact with it.
+
+```
+npm start
+```
+
+In addition, since Protractor is built upon WebDriver we need to install this.  The angular-seed
+project comes with a predefined script to do this:
+
+```
+npm run update-webdriver
+```
+
+This will download and install the latest version of the stand-alone WebDriver tool.
+
+Once you have ensured that the development web server hosting our application is up and running
+and WebDriver is updated, you can run the end-to-end tests using the supplied npm script:
+
+```
+npm run protractor
+```
+
+This script will execute the end-to-end tests against the application being hosted on the
+development server.
+
+
+## Updating Angular
+
+Previously we recommended that you merge in changes to angular-seed into your own fork of the project.
+Now that the angular framework library code and tools are acquired through package managers (npm and
+bower) you can use these tools instead to update the dependencies.
+
+You can update the tool dependencies by running:
+
+```
+npm update
+```
+
+This will find the latest versions that match the version ranges specified in the `package.json` file.
+
+You can update the Angular dependencies by running:
+
+```
+bower update
+```
+
+This will find the latest versions that match the version ranges specified in the `bower.json` file.
+
+
+## Loading Angular Asynchronously
+
+The angular-seed project supports loading the framework and application scripts asynchronously.  The
+special `index-async.html` is designed to support this style of loading.  For it to work you must
+inject a piece of Angular JavaScript into the HTML page.  The project has a predefined script to help
+do this.
+
+```
+npm run update-index-async
+```
+
+This will copy the contents of the `angular-loader.js` library file into the `index-async.html` page.
+You can run this every time you update the version of Angular that you are using.
+
+
+## Serving the Application Files
+
+While angular is client-side-only technology and it's possible to create angular webapps that
+don't require a backend server at all, we recommend serving the project files using a local
+webserver during development to avoid issues with security restrictions (sandbox) in browsers. The
+sandbox implementation varies between browsers, but quite often prevents things like cookies, xhr,
+etc to function properly when an html page is opened via `file://` scheme instead of `http://`.
+
+
+### Running the App during Development
+
+The angular-seed project comes preconfigured with a local development webserver.  It is a node.js
+tool called [http-server][http-server].  You can start this webserver with `npm start` but you may choose to
+install the tool globally:
+
+```
+sudo npm install -g http-server
+```
+
+Then you can start your own development web server to serve static files from a folder by
+running:
+
+```
+http-server -a localhost -p 8000
+```
+
+Alternatively, you can choose to configure your own webserver, such as apache or nginx. Just
+configure your server to serve the files under the `app/` directory.
+
+
+### Running the App in Production
+
+This really depends on how complex your app is and the overall infrastructure of your system, but
+the general rule is that all you need in production are all the files under the `app/` directory.
+Everything else should be omitted.
+
+Angular apps are really just a bunch of static html, css and js files that just need to be hosted
+somewhere they can be accessed by browsers.
+
+If your Angular app is talking to the backend server via xhr or other means, you need to figure
+out what is the best way to host the static files to comply with the same origin policy if
+applicable. Usually this is done by hosting the files by the backend server or through
+reverse-proxying the backend server(s) and webserver(s).
+
+
+## Continuous Integration
+
+### Travis CI
+
+[Travis CI][travis] is a continuous integration service, which can monitor GitHub for new commits
+to your repository and execute scripts such as building the app or running tests. The angular-seed
+project contains a Travis configuration file, `.travis.yml`, which will cause Travis to run your
+tests when you push to GitHub.
+
+You will need to enable the integration between Travis and GitHub. See the Travis website for more
+instruction on how to do this.
+
+### CloudBees
+
+CloudBees have provided a CI/deployment setup:
+
+<a href="https://grandcentral.cloudbees.com/?CB_clickstart=https://raw.github.com/CloudBees-community/angular-js-clickstart/master/clickstart.json">
+<img src="https://d3ko533tu1ozfq.cloudfront.net/clickstart/deployInstantly.png"/></a>
+
+If you run this, you will get a cloned version of this repo to start working on in a private git repo,
+along with a CI service (in Jenkins) hosted that will run unit and end to end tests in both Firefox and Chrome.
+
+
+## Contact
+
+For more information on AngularJS please check out http://angularjs.org/
+
+[git]: http://git-scm.com/
+[bower]: http://bower.io
+[npm]: https://www.npmjs.org/
+[node]: http://nodejs.org
+[protractor]: https://github.com/angular/protractor
+[jasmine]: http://jasmine.github.io
+[karma]: http://karma-runner.github.io
+[travis]: https://travis-ci.org/
+[http-server]: https://github.com/nodeapps/http-server
diff --git a/app/app.css b/app/app.css
new file mode 100644
index 0000000..c925240
--- /dev/null
+++ b/app/app.css
@@ -0,0 +1,30 @@
+/* app css stylesheet */
+
+.menu {
+  list-style: none;
+  border-bottom: 0.1em solid black;
+  margin-bottom: 2em;
+  padding: 0 0 0.5em;
+}
+
+.menu:before {
+  content: "[";
+}
+
+.menu:after {
+  content: "]";
+}
+
+.menu > li {
+  display: inline;
+}
+
+.menu > li:before {
+  content: "|";
+  padding-right: 0.3em;
+}
+
+.menu > li:nth-child(1):before {
+  content: "";
+  padding: 0;
+}
diff --git a/app/app.js b/app/app.js
new file mode 100644
index 0000000..21eccdb
--- /dev/null
+++ b/app/app.js
@@ -0,0 +1,12 @@
+'use strict';
+
+// Declare app level module which depends on views, and components
+angular.module('myApp', [
+  'ngRoute',
+  'myApp.view1',
+  'myApp.view2',
+  'myApp.version'
+]).
+config(['$routeProvider', function($routeProvider) {
+  $routeProvider.otherwise({redirectTo: '/view1'});
+}]);
diff --git a/app/components/version/interpolate-filter.js b/app/components/version/interpolate-filter.js
new file mode 100644
index 0000000..03bb198
--- /dev/null
+++ b/app/components/version/interpolate-filter.js
@@ -0,0 +1,9 @@
+'use strict';
+
+angular.module('myApp.version.interpolate-filter', [])
+
+.filter('interpolate', ['version', function(version) {
+  return function(text) {
+    return String(text).replace(/\%VERSION\%/mg, version);
+  };
+}]);
diff --git a/app/components/version/interpolate-filter_test.js b/app/components/version/interpolate-filter_test.js
new file mode 100644
index 0000000..ff56c52
--- /dev/null
+++ b/app/components/version/interpolate-filter_test.js
@@ -0,0 +1,15 @@
+'use strict';
+
+describe('myApp.version module', function() {
+  beforeEach(module('myApp.version'));
+
+  describe('interpolate filter', function() {
+    beforeEach(module(function($provide) {
+      $provide.value('version', 'TEST_VER');
+    }));
+
+    it('should replace VERSION', inject(function(interpolateFilter) {
+      expect(interpolateFilter('before %VERSION% after')).toEqual('before TEST_VER after');
+    }));
+  });
+});
diff --git a/app/components/version/version-directive.js b/app/components/version/version-directive.js
new file mode 100644
index 0000000..74088f8
--- /dev/null
+++ b/app/components/version/version-directive.js
@@ -0,0 +1,9 @@
+'use strict';
+
+angular.module('myApp.version.version-directive', [])
+
+.directive('appVersion', ['version', function(version) {
+  return function(scope, elm, attrs) {
+    elm.text(version);
+  };
+}]);
diff --git a/app/components/version/version-directive_test.js b/app/components/version/version-directive_test.js
new file mode 100644
index 0000000..4a59e11
--- /dev/null
+++ b/app/components/version/version-directive_test.js
@@ -0,0 +1,17 @@
+'use strict';
+
+describe('myApp.version module', function() {
+  beforeEach(module('myApp.version'));
+
+  describe('app-version directive', function() {
+    it('should print current version', function() {
+      module(function($provide) {
+        $provide.value('version', 'TEST_VER');
+      });
+      inject(function($compile, $rootScope) {
+        var element = $compile('<span app-version></span>')($rootScope);
+        expect(element.text()).toEqual('TEST_VER');
+      });
+    });
+  });
+});
diff --git a/app/components/version/version.js b/app/components/version/version.js
new file mode 100644
index 0000000..cb7a10f
--- /dev/null
+++ b/app/components/version/version.js
@@ -0,0 +1,8 @@
+'use strict';
+
+angular.module('myApp.version', [
+  'myApp.version.interpolate-filter',
+  'myApp.version.version-directive'
+])
+
+.value('version', '0.1');
diff --git a/app/components/version/version_test.js b/app/components/version/version_test.js
new file mode 100644
index 0000000..4ca6880
--- /dev/null
+++ b/app/components/version/version_test.js
@@ -0,0 +1,11 @@
+'use strict';
+
+describe('myApp.version module', function() {
+  beforeEach(module('myApp.version'));
+
+  describe('version service', function() {
+    it('should return current version', inject(function(version) {
+      expect(version).toEqual('0.1');
+    }));
+  });
+});
diff --git a/app/index-async.html b/app/index-async.html
new file mode 100644
index 0000000..a559b71
--- /dev/null
+++ b/app/index-async.html
@@ -0,0 +1,58 @@
+<!doctype html>
+<html lang="en">
+<head>
+  <meta charset="utf-8">
+  <link rel="stylesheet" href="bower_components/html5-boilerplate/css/normalize.css">
+  <link rel="stylesheet" href="bower_components/html5-boilerplate/css/main.css">
+  <style>
+    [ng-cloak] {
+      display: none;
+    }
+  </style>
+  <script src="bower_components/html5-boilerplate/js/vendor/modernizr-2.6.2.min.js"></script>
+  <script>
+    // include angular loader, which allows the files to load in any order
+    //@@NG_LOADER_START@@
+    // You need to run `npm run update-index-async` to inject the angular async code here
+    //@@NG_LOADER_END@@
+
+    // include a third-party async loader library
+    /*!
+     * $script.js v1.3
+     * https://github.com/ded/script.js
+     * Copyright: @ded & @fat - Dustin Diaz, Jacob Thornton 2011
+     * Follow our software http://twitter.com/dedfat
+     * License: MIT
+     */
+    !function(a,b,c){function t(a,c){var e=b.createElement("script"),f=j;e.onload=e.onerror=e[o]=function(){e[m]&&!/^c|loade/.test(e[m])||f||(e.onload=e[o]=null,f=1,c())},e.async=1,e.src=a,d.insertBefore(e,d.firstChild)}function q(a,b){p(a,function(a){return!b(a)})}var d=b.getElementsByTagName("head")[0],e={},f={},g={},h={},i="string",j=!1,k="push",l="DOMContentLoaded",m="readyState",n="addEventListener",o="onreadystatechange",p=function(a,b){for(var c=0,d=a.length;c<d;++c)if(!b(a[c]))return j;return 1};!b[m]&&b[n]&&(b[n](l,function r(){b.removeEventListener(l,r,j),b[m]="complete"},j),b[m]="loading");var s=function(a,b,d){function o(){if(!--m){e[l]=1,j&&j();for(var a in g)p(a.split("|"),n)&&!q(g[a],n)&&(g[a]=[])}}function n(a){return a.call?a():e[a]}a=a[k]?a:[a];var i=b&&b.call,j=i?b:d,l=i?a.join(""):b,m=a.length;c(function(){q(a,function(a){h[a]?(l&&(f[l]=1),o()):(h[a]=1,l&&(f[l]=1),t(s.path?s.path+a+".js":a,o))})},0);return s};s.get=t,s.ready=function(a,b,c){a=a[k]?a:[a];var d=[];!q(a,function(a){e[a]||d[k](a)})&&p(a,function(a){return e[a]})?b():!function(a){g[a]=g[a]||[],g[a][k](b),c&&c(d)}(a.join("|"));return s};var u=a.$script;s.noConflict=function(){a.$script=u;return this},typeof module!="undefined"&&module.exports?module.exports=s:a.$script=s}(this,document,setTimeout)
+
+    // load all of the dependencies asynchronously.
+    $script([
+      'bower_components/angular/angular.js',
+      'bower_components/angular-route/angular-route.js',
+      'app.js',
+      'view1/view1.js',
+      'view2/view2.js',
+      'components/version/version.js',
+      'components/version/version-directive.js',
+      'components/version/interpolate-filter.js'
+    ], function() {
+      // when all is done, execute bootstrap angular application
+      angular.bootstrap(document, ['myApp']);
+    });
+  </script>
+  <title>My AngularJS App</title>
+  <link rel="stylesheet" href="app.css">
+</head>
+<body ng-cloak>
+  <ul class="menu">
+    <li><a href="#/view1">view1</a></li>
+    <li><a href="#/view2">view2</a></li>
+  </ul>
+
+  <div ng-view></div>
+
+  <div>Angular seed app: v<span app-version></span></div>
+
+</body>
+</html>
diff --git a/app/index.html b/app/index.html
new file mode 100644
index 0000000..d0aacaa
--- /dev/null
+++ b/app/index.html
@@ -0,0 +1,43 @@
+<!DOCTYPE html>
+<!--[if lt IE 7]>      <html lang="en" ng-app="myApp" class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
+<!--[if IE 7]>         <html lang="en" ng-app="myApp" class="no-js lt-ie9 lt-ie8"> <![endif]-->
+<!--[if IE 8]>         <html lang="en" ng-app="myApp" class="no-js lt-ie9"> <![endif]-->
+<!--[if gt IE 8]><!--> <html lang="en" ng-app="myApp" class="no-js"> <!--<![endif]-->
+<head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <title>My AngularJS App</title>
+  <meta name="description" content="">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  <link rel="stylesheet" href="bower_components/html5-boilerplate/css/normalize.css">
+  <link rel="stylesheet" href="bower_components/html5-boilerplate/css/main.css">
+  <link rel="stylesheet" href="app.css">
+  <script src="bower_components/html5-boilerplate/js/vendor/modernizr-2.6.2.min.js"></script>
+</head>
+<body>
+  <ul class="menu">
+    <li><a href="#/view1">view1</a></li>
+    <li><a href="#/view2">view2</a></li>
+  </ul>
+
+  <!--[if lt IE 7]>
+      <p class="browsehappy">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>
+  <![endif]-->
+
+  <div ng-view></div>
+
+  <div>Angular seed app: v<span app-version></span></div>
+
+  <!-- In production use:
+  <script src="//ajax.googleapis.com/ajax/libs/angularjs/x.x.x/angular.min.js"></script>
+  -->
+  <script src="bower_components/angular/angular.js"></script>
+  <script src="bower_components/angular-route/angular-route.js"></script>
+  <script src="app.js"></script>
+  <script src="view1/view1.js"></script>
+  <script src="view2/view2.js"></script>
+  <script src="components/version/version.js"></script>
+  <script src="components/version/version-directive.js"></script>
+  <script src="components/version/interpolate-filter.js"></script>
+</body>
+</html>
diff --git a/app/view1/view1.html b/app/view1/view1.html
new file mode 100644
index 0000000..89459a6
--- /dev/null
+++ b/app/view1/view1.html
@@ -0,0 +1 @@
+<p>This is the partial for view 1.</p>
diff --git a/app/view1/view1.js b/app/view1/view1.js
new file mode 100644
index 0000000..4ce0b4f
--- /dev/null
+++ b/app/view1/view1.js
@@ -0,0 +1,14 @@
+'use strict';
+
+angular.module('myApp.view1', ['ngRoute'])
+
+.config(['$routeProvider', function($routeProvider) {
+  $routeProvider.when('/view1', {
+    templateUrl: 'view1/view1.html',
+    controller: 'View1Ctrl'
+  });
+}])
+
+.controller('View1Ctrl', [function() {
+
+}]);
\ No newline at end of file
diff --git a/app/view1/view1_test.js b/app/view1/view1_test.js
new file mode 100644
index 0000000..14ba79b
--- /dev/null
+++ b/app/view1/view1_test.js
@@ -0,0 +1,16 @@
+'use strict';
+
+describe('myApp.view1 module', function() {
+
+  beforeEach(module('myApp.view1'));
+
+  describe('view1 controller', function(){
+
+    it('should ....', inject(function($controller) {
+      //spec body
+      var view1Ctrl = $controller('View1Ctrl');
+      expect(view1Ctrl).toBeDefined();
+    }));
+
+  });
+});
\ No newline at end of file
diff --git a/app/view2/view2.html b/app/view2/view2.html
new file mode 100644
index 0000000..b6503ee
--- /dev/null
+++ b/app/view2/view2.html
@@ -0,0 +1,5 @@
+<p>This is the partial for view 2.</p>
+<p>
+  Showing of 'interpolate' filter:
+  {{ 'Current version is v%VERSION%.' | interpolate }}
+</p>
diff --git a/app/view2/view2.js b/app/view2/view2.js
new file mode 100644
index 0000000..a0ff97d
--- /dev/null
+++ b/app/view2/view2.js
@@ -0,0 +1,14 @@
+'use strict';
+
+angular.module('myApp.view2', ['ngRoute'])
+
+.config(['$routeProvider', function($routeProvider) {
+  $routeProvider.when('/view2', {
+    templateUrl: 'view2/view2.html',
+    controller: 'View2Ctrl'
+  });
+}])
+
+.controller('View2Ctrl', [function() {
+
+}]);
\ No newline at end of file
diff --git a/app/view2/view2_test.js b/app/view2/view2_test.js
new file mode 100644
index 0000000..07b34d6
--- /dev/null
+++ b/app/view2/view2_test.js
@@ -0,0 +1,16 @@
+'use strict';
+
+describe('myApp.view2 module', function() {
+
+  beforeEach(module('myApp.view2'));
+
+  describe('view2 controller', function(){
+
+    it('should ....', inject(function($controller) {
+      //spec body
+      var view2Ctrl = $controller('View2Ctrl');
+      expect(view2Ctrl).toBeDefined();
+    }));
+
+  });
+});
\ No newline at end of file
diff --git a/bower.json b/bower.json
new file mode 100644
index 0000000..19e683e
--- /dev/null
+++ b/bower.json
@@ -0,0 +1,15 @@
+{
+  "name": "angular-seed",
+  "description": "A starter project for AngularJS",
+  "version": "0.0.0",
+  "homepage": "https://github.com/angular/angular-seed",
+  "license": "MIT",
+  "private": true,
+  "dependencies": {
+    "angular": "1.2.x",
+    "angular-route": "1.2.x",
+    "angular-loader": "1.2.x",
+    "angular-mocks": "~1.2.x",
+    "html5-boilerplate": "~4.3.0"
+  }
+}
diff --git a/e2e-tests/protractor.conf.js b/e2e-tests/protractor.conf.js
new file mode 100644
index 0000000..b45a117
--- /dev/null
+++ b/e2e-tests/protractor.conf.js
@@ -0,0 +1,19 @@
+exports.config = {
+  allScriptsTimeout: 11000,
+
+  specs: [
+    '*.js'
+  ],
+
+  capabilities: {
+    'browserName': 'chrome'
+  },
+
+  baseUrl: 'http://localhost:8000/app/',
+
+  framework: 'jasmine',
+
+  jasmineNodeOpts: {
+    defaultTimeoutInterval: 30000
+  }
+};
diff --git a/e2e-tests/scenarios.js b/e2e-tests/scenarios.js
new file mode 100644
index 0000000..e66d140
--- /dev/null
+++ b/e2e-tests/scenarios.js
@@ -0,0 +1,42 @@
+'use strict';
+
+/* https://github.com/angular/protractor/blob/master/docs/toc.md */
+
+describe('my app', function() {
+
+  browser.get('index.html');
+
+  it('should automatically redirect to /view1 when location hash/fragment is empty', function() {
+    expect(browser.getLocationAbsUrl()).toMatch("/view1");
+  });
+
+
+  describe('view1', function() {
+
+    beforeEach(function() {
+      browser.get('index.html#/view1');
+    });
+
+
+    it('should render view1 when user navigates to /view1', function() {
+      expect(element.all(by.css('[ng-view] p')).first().getText()).
+        toMatch(/partial for view 1/);
+    });
+
+  });
+
+
+  describe('view2', function() {
+
+    beforeEach(function() {
+      browser.get('index.html#/view2');
+    });
+
+
+    it('should render view2 when user navigates to /view2', function() {
+      expect(element.all(by.css('[ng-view] p')).first().getText()).
+        toMatch(/partial for view 2/);
+    });
+
+  });
+});
diff --git a/karma.conf.js b/karma.conf.js
new file mode 100644
index 0000000..44bb29f
--- /dev/null
+++ b/karma.conf.js
@@ -0,0 +1,33 @@
+module.exports = function(config){
+  config.set({
+
+    basePath : './',
+
+    files : [
+      'app/bower_components/angular/angular.js',
+      'app/bower_components/angular-route/angular-route.js',
+      'app/bower_components/angular-mocks/angular-mocks.js',
+      'app/components/**/*.js',
+      'app/view*/**/*.js'
+    ],
+
+    autoWatch : true,
+
+    frameworks: ['jasmine'],
+
+    browsers : ['Chrome'],
+
+    plugins : [
+            'karma-chrome-launcher',
+            'karma-firefox-launcher',
+            'karma-jasmine',
+            'karma-junit-reporter'
+            ],
+
+    junitReporter : {
+      outputFile: 'test_out/unit.xml',
+      suite: 'unit'
+    }
+
+  });
+};
diff --git a/package.json b/package.json
new file mode 100644
index 0000000..e17664c
--- /dev/null
+++ b/package.json
@@ -0,0 +1,34 @@
+{
+  "name": "angular-seed",
+  "private": true,
+  "version": "0.0.0",
+  "description": "A starter project for AngularJS",
+  "repository": "https://github.com/angular/angular-seed",
+  "license": "MIT",
+  "devDependencies": {
+    "karma": "~0.10",
+    "protractor": "^1.1.1",
+    "http-server": "^0.6.1",
+    "bower": "^1.3.1",
+    "shelljs": "^0.2.6",
+    "karma-junit-reporter": "^0.2.2"
+  },
+  "scripts": {
+    "postinstall": "bower install",
+
+    "prestart": "npm install",
+    "start": "http-server -a localhost -p 8000 -c-1",
+
+    "pretest": "npm install",
+    "test": "karma start karma.conf.js",
+    "test-single-run": "karma start karma.conf.js  --single-run",
+
+    "preupdate-webdriver": "npm install",
+    "update-webdriver": "webdriver-manager update",
+
+    "preprotractor": "npm run update-webdriver",
+    "protractor": "protractor e2e-tests/protractor.conf.js",
+
+    "update-index-async": "node -e \"require('shelljs/global'); sed('-i', /\\/\\/@@NG_LOADER_START@@[\\s\\S]*\\/\\/@@NG_LOADER_END@@/, '//@@NG_LOADER_START@@\\n' + sed(/sourceMappingURL=angular-loader.min.js.map/,'sourceMappingURL=bower_components/angular-loader/angular-loader.min.js.map','app/bower_components/angular-loader/angular-loader.min.js') + '\\n//@@NG_LOADER_END@@', 'app/index-async.html');\""
+  }
+}
-- 
1.9.5.msysgit.0

